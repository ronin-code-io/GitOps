name: Build, Test and Deploy to Prod

# Trigger the workflow when changes are pushed to the main branch
on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [deployment-to-prod]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Install sshpass
      run: sudo apt-get install sshpass

    - name: Copy compose.yml to droplet
      run: sshpass -v -p '${{ secrets.DROPLET_PASSWORD }}' scp -o StrictHostKeyChecking=no compose.yml root@${{ vars.DROPLET_IP }}:~

    - name: Copy reverse proxy config to droplet
      run: sshpass -v -p '${{ secrets.DROPLET_PASSWORD }}' scp -r -o StrictHostKeyChecking=no reverse-proxy-service root@${{ vars.DROPLET_IP }}:~

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ vars.DROPLET_IP }}
        username: root
        password: ${{ secrets.DROPLET_PASSWORD }}
        script: |
          cd ~
          touch ./reverse-proxy-service/acme.json
          chmod 600 ./reverse-proxy-service/acme.json
          echo '${{ secrets.RONIN_CODE_IO_CERT_FILE }}' > ./reverse-proxy-service/cert.pem
          echo '${{ secrets.RONIN_CODE_IO_KEY_FILE}}' > ./reverse-proxy-service/key.pem
          export JWT_SECRET=${{ secrets.JWT_SECRET }}
          export AUTH_SERVICE_HOST=${{ secrets.AUTH_SERVICE_HOST }}
          export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          docker compose down
          docker compose pull
          docker compose up -d

services:
  app-service:
    image: yoloslaw/app-service:latest
    restart: "always"
    environment: 
      AUTH_SERVICE_HOST: ${AUTH_SERVICE_HOST}
    expose:
      - "8000:8000"
    depends_on: 
      auth-service:
        condition: service_started
      reverse-proxy:
        condition: service_started
    labels:
      traefik.enable: "true"

      traefik.http.middlewares.secure-mw.redirectscheme.permanent: "false"
      traefik.http.middlewares.secure-mv.redirectscheme.scheme: "https"

      traefik.http.middlewares.app-mv.chain.middlewares: "secure-mv"

      traefik.http.middlewares.strip-app-mv.stripprefix.prefixes: "/app"

      traefik.http.routers.app-service.entrypoints: "web"
      traefik.http.routers.app-service.rule: "Host(`ronin-code.io`) && PathPrefix(`/app`)"
      
      traefik.http.services.app-service.loadbalancer.server.port: "8000"

      traefik.http.routers.app-service-http.middlewares: "app-mv"
      traefik.http.routers.app-service-secure.entrypoints: "websecure"
      traefik.http.routers.app-service-secure.rule: "Host(`ronin-code.io`) && PathPrefix(`/app`)"

      traefik.http.routers.app-service-secure.tls: "true"
      traefik.http.routers.app-service-secure.middlewares: "strip-app-mv"

  auth-service:
    image: yoloslaw/auth-service:latest
    restart: "always"
    expose:
      - "3000:3000"
    depends_on:
      - reverse-proxy
    labels:
      traefik.enable: "true"

      traefik.http.middlewares.secure-mw.redirectscheme.permanent: "false"
      traefik.http.middlewares.secure-mv.redirectscheme.scheme: "https"

      traefik.http.middlewares.auth-mv.chain.middlewares: "secure-mv"

      traefik.http.middlewares.strip-auth-mv.stripprefix.prefixes: "/auth"

      traefik.http.routers.auth-service.entrypoints: "web"
      traefik.http.routers.auth-service.rule: "Host(`ronin-code.io`) && PathPrefix(`/auth`)"
      
      traefik.http.services.auth-service.loadbalancer.server.port: "3000"

      traefik.http.routers.auth-service-http.middlewares: "auth-mv"
      traefik.http.routers.auth-service-secure.entrypoints: "websecure"
      traefik.http.routers.auth-service-secure.rule: "Host(`ronin-code.io`) && PathPrefix(`/auth`)"

      traefik.http.routers.auth-service-secure.tls: "true"
      traefik.http.routers.auth-service-secure.middlewares: "strip-auth-mv"
  
  reverse-proxy:
    image: traefik:latest
    restart: "always"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./reverse-proxy-service/traefik.yml:/etc/traefik/traefik.yml
      - ./reverse-proxy-service/acme.json:/letsencrypt/acme.json
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      traefik.enable: "false"
